exit
value
value.split.all? {|digit| (0..9).include?(digit.to_i)} && value.length == 9
c
value.split.all? {|digit| (0..9).include?(digit.to_i)} && value.length == 9
c
value.split.all? {|digit| (0..9).include?(digit.to_i)} && value.length == 9
exit
c
["amb", "blu", "brn", "gry", "grn", "hzl", "oth"].include?(value)
["amb", "blu", "brn", "gry", "grn", "hzl", "oth"]
exit
value[0] == "#" && value[1..-1].split("").all? { |ele| (0..9).include?(ele.to_i) || ("a".."f").include?(ele)}
(1..3).include?(2)
(1..3).include?2
[1..3].to_a
[1..3].to_a.include?(2)
[1..3].include?(2)
["a".."f"].include?("b")
["a".."f"].include?("a")
value[1..-1].split("")
value
value[0] == "#" && value[1..-1].split("").all? { |ele| [0..9].include?(ele.to_i) || ["a".."f"].include?(ele)}
c
measurement.to_i.between?(150, 193)
unit
exit
value[0..-3]
value
measurement
unit
field
c
value.to_i.between?(2020, 2030)
c
value
value.to_i.between?(2020, 2030)
c
value.to_i.between?(2010, 2020)
c
value.to_i.between?(1920, 2002)
exit
value.to_i.between?(2020, 2030)
value
c
value
value.to_i.between?(2020, 2030)
exit
field
exit
passports
c
passports
exit
passports
c
passport
exit
passports
c
passport.to_h
passport
exit
passport
c
passport
kv
exit
kv.split(":").to_h
kv.split(":")
kv
c
kv
exit
kv.to_h
kv
exit
passport
exit
passport
exit
passport
exit
passport
exit
disp passport
exit
c
passport
